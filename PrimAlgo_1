#include <stdio.h>
#define TRUE 1
#define FALSE 0

#define MAX_VERTICES 7 //신징트리의 정점개수
#define INF 1000L 
int weight[MAX_VERTICES][MAX_VERTICES] = {
    {0,29,INF,INF,INF,10,INF},
    {29,0,16,INF,INF,INF,15},
    {INF,16,0,12,INF,INF,INF},
    {INF,INF,12,0,22,INF,18},
    {INF,INF,INF,22,0,27,25},
    {10,INF,INF,INF,27,0,INF},
    {INF,15,INF,18,25,INF,0}
};

int selected[MAX_VERTICES];
int dist[MAX_VERTICES];//최소의 거리 정보만을 담는 배열, 새로운 최소거리가 나올 때마다 갱신

int get_min_vertex(int n)
{
    int v;//정점 정보 저장 변수

    for (int i = 0; i < n; i++)
    {
        if(selected[i] == FALSE)
        {//아직 선택되지 않은 정점의 번호를 v에 저장, 각 함수 실행별 0부터 n-1까지 차례대로 저장된다.
            v = i;
            break;
        }
    }

    //위에서 선택된 정점이 과연 최소거리를 지니고 있는 정점인지를 확인
    for (int i = 0; i < n; i++)
    {
        //선택되지 않은 정점들을 순회하면서 최소거리를 가진 정점을 찾아낸다.
        if(selected[i] = FALSE && (dist[i]<dist[v]))
        {
            v = i; //더 적은 거리가 갖는 정점이 선택됐으므로 정점 번호를 리턴.
        }
    }
    
    
}

void prim(int s,int n)
{
    int v;

    for (int  u = 0; u < n; u++)//dist배열과 selected배열 정보 초기화
    {
        dist[u] = INF;
        selected[u] = FALSE;
    }
    
    dist[s] = 0;

    for (int i = 0; i < n; i++)
    {
        //리턴된 정점 번호를 u에 저장. u는 최소거리를 가지는 정점.
        u = get_min_vertex(n);
        selected[u] = TRUE; //최소거리를 갖는 정점의 정보 u 를 알아냈으니 해당 정점을 선택했다고 표시한다.

        //만약 경로가 없다면 함수를 종료한다. 정상적인 신장트리의 정보가 들어왔다면 실행될 일은 없을 것이다.
        if(dist[u]==INF)
        {
            return;
        }

        printf("%d ",u);

        for (int v = 0; v < n; v++)//이 과정은 우리가 새롭게 발견한 정보를 저장하는 과정이다.
        {//직접적인 경로가 발견되어 INF 에서 상수거리로 바뀌는 과정과
        //기존의 상수거리보다 더 짧은 거리가 발견되 그 정보를 갱신하는 과정이 포함되어 있다.
        //선택된 u정점을 기준으로 정점 u와 연결되어 있는 정점까지의 거리를 각각 비교한다.
            if (weight[u][v] != INF)//정점 u와 연결이 되어있고.
            {
                //아직 선택되지 않았으며 해당 변 weight[u][v]의 길이가 기존의 dist[v]값보다 작다면
                if (selected[v] == FALSE && weight[u][v] < dist[v])
                {
                    dist[v] = weight[u][v];//dist[v]의 값을 갱신해준다.

                    //새롭게 발견되는 정점들이 초반에 저장될 수 있는건 INF를 1000으로 설정해줬기 때문
                }
                
            }
            
        }
        
    }
    
}
int main(void)
{
    prim(0,MAX_VERTICES);
}